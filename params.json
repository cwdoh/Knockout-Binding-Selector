{"name":"Knockout-binding-selector","tagline":"Enabler module of binding-overloading from Knockout.js.","body":"KO Binding Selector - Knockout.js plugin\r\n=========================\r\n\r\nThis module makes to enable binding-overloading from Knockout.js.\r\nSelector plugin provides selector of binding by custom-condition.\r\n\r\n##Description\r\n\r\n* License: MIT license - [http://www.opensource.org/licenses/mit-license.php](http://www.opensource.org/licenses/mit-license.php)\r\n* Source - [http://www.github.com/cwdoh/Knockout-Binding-Selector](http://www.github.com/cwdoh/Knockout-Binding-Selector)\r\n* Author : Changwook Doh - changwook.doh@gmail.com\r\n\r\n##Requirements\r\n\r\nThis module needs Knockout JavaScript library (c) Steven Sanderson - http://knockoutjs.com/\r\n\r\n##CAUTION\r\n\r\n* this code should be loaded after knockout.js. so, insert this script after knockout.js included.\r\n* if you don't set condition, default binding handler will be changed to new one.\r\n* if there's exist matched binding handler and no matched function called, handler-call will be ignored.\r\n\r\n##Binding-Selector?\r\n\r\nFor example if you want to bind your data with jQuery Mobile Widget and it has same api name as KO's built-in binding name.\r\nSure, you can solve it by changing a name of Widget's binding or override built-ins to new bindings.\r\n\r\nBut if you give new binding names for your custom bindings,\r\nit will cause to conflict for that you descript binding when writing binding actions in html code.\r\n\r\nif you decide to override bindings instead of built-ins, It will works fine.\r\nbut you can't use built-ins even if you want to use it.\r\n\r\nSelector plugin makes to enable adding bindings and its executable condition under same name.\r\nWhen KO meets binding syntax, selector try to find a binding has matched condition and executes it.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}
{"name":"Knockout-binding-selector","tagline":"Enabler module of binding-overloading from Knockout.js.","body":"KO Binding Selector - Knockout.js plugin\r\n======\r\n\r\nThis module makes to enable binding-overloading from Knockout.js.\r\nSelector plugin provides selector of binding by custom-condition.\r\n\r\n##Binding-Selector?\r\n\r\nFor example if you want to bind your data with jQuery Mobile Widget and it has same api name as KO's built-in binding name.\r\nSure, you can solve it by changing a name of Widget's binding or override built-ins to new bindings.\r\n\r\nBut if you give new binding names for your custom bindings,\r\nit will cause to conflict for that you descript binding when writing binding actions in html code.\r\n\r\nif you decide to override bindings instead of built-ins, It will works fine.\r\nbut you can't use built-ins even if you want to use it.\r\n\r\nSelector plugin makes to enable adding bindings and its executable condition under same name.\r\nWhen KO meets binding syntax, selector try to find a binding has matched condition and executes it.\r\n\r\n##Dependency\r\n\r\nBinding-Selector requires Knockout JavaScript library (c) Steven Sanderson - http://knockoutjs.com/\r\n\r\n##Usage\r\n\r\n###Scripts order\r\n\r\nthis code should be loaded after knockout.js. so, insert this script after knockout.js included.\r\n\r\n  \r\n  <script type=\"text/javascript\" src=\"knockout.js\"></script>\r\n\t<script type=\"text/javascript\" src=\"bindingselector.js\"></script>\r\n\r\n\r\n###Adding custom binding with binding selector\r\n\r\n\t// sample binding overloading : check node type & alert\r\n\tko.bindingSelector.add(\r\n\t\t\"text\",\r\n\t\t{\r\n\t\t\t\"update\": function (element, valueAccessor) {\r\n\t\t\t\tvar value = ko.utils.unwrapObservable(valueAccessor() || {});\r\n\t\t\t\telement.innerText = value + \": THIS is SPAN TAG\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction( element ) {\r\n\t\t\tif ( element.tagName == \"SPAN\" )\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t);\r\n\r\n\tko.bindingSelector.add(\r\n\t\t\"text\",\r\n\t\t{\r\n\t\t\t\"update\": function (element, valueAccessor) {\r\n\t\t\t\tvar value = ko.utils.unwrapObservable(valueAccessor() || {});\r\n\t\t\t\telement.innerText = value + \": THIS is DIV TAG\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction( element ) {\r\n\t\t\tif ( element.tagName == \"DIV\" )\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t);\r\n\r\n###Setting or changing default.\r\n\r\nWhen using ko.bindingSelector.add() and there is no condition, default binding handler will be changed to new one.\r\n\r\n\tko.bindingSelector.add(\r\n\t\t\"text\",\r\n\t\t{\r\n\t\t\t\"update\": function (element, valueAccessor) {\r\n\t\t\t\tvar value = ko.utils.unwrapObservable(valueAccessor() || {});\r\n\t\t\t\telement.innerText = value + \": THIS binding will be default binding.\";\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\r\n##Basic Example\r\n\r\nAdding 2 custom 'text' bindings that have different behavior by its element type.\r\n\r\n###HTML\r\n\r\n\t<!DOCTYPE html>\r\n\t<html>\r\n\t\t<head>\r\n\t\t\t<meta charset=\"utf-8\">\r\n\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\">\r\n\t\t\t<title>Binding Selector Sample</title>\r\n\t\t\t<script type=\"text/javascript\" src=\"./knockout-latest.js\"></script>\r\n\t\t\t<script type=\"text/javascript\" src=\"../src/bindingselector.js\"></script>\r\n\t\t\t<script type=\"text/javascript\" src=\"./main.js\"></script>\r\n\t\t</head>\r\n\t\t<body id=\"root\" onLoad=\"onLoad()\">\r\n\t\t\t<span data-bind=\"text: message\"></span>\r\n\t\t\t<div data-bind=\"text: message\"></div>\r\n\t\t\t<p data-bind=\"text: message\"></p>\r\n\t\t</body>\r\n\t</html>\r\n\r\n###Javascript\r\n\r\n    // sample binding overloading : check node type & alert\r\n\tko.bindingSelector.add(\r\n\t\t\"text\",\r\n\t\t{\r\n\t\t\t\"update\": function (element, valueAccessor) {\r\n\t\t\t\tvar value = ko.utils.unwrapObservable(valueAccessor() || {});\r\n\t\t\t\telement.innerText = value + \": THIS is SPAN TAG\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction( element ) {\r\n\t\t\tif ( element.tagName == \"SPAN\" )\r\n\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t);\r\n\r\n\tko.bindingSelector.add(\r\n\t\t\"text\",\r\n\t\t{\r\n\t\t\t\"update\": function (element, valueAccessor) {\r\n\t\t\t\tvar value = ko.utils.unwrapObservable(valueAccessor() || {});\r\n\t\t\t\telement.innerText = value + \": THIS is DIV TAG\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction( element ) {\r\n\t\t\tif ( element.tagName == \"DIV\" )\r\n\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t);\r\n\r\n\tfunction onLoad()\r\n\t{\r\n\t\tvar viewModel = {\r\n\t\t\tmessage: \"Hello, bindings\"\r\n\t\t};\r\n\r\n\t\tko.applyBindings( viewModel );\r\n\t}\r\n\r\n##No default handler\r\n\r\nWhen binding is called and can not find matched condition, binding will be ignored.\r\n  \r\n\t// add currency binding for 'kr-won'\r\n\tko.bindingSelector.add(\r\n\t\t\"currency\",\r\n\t\t{\r\n\t\t\t\"update\": function (element, valueAccessor) {\r\n\t\t\t\tvar value = ko.utils.unwrapObservable(valueAccessor() || {});\r\n\t\t\t\telement.innerText = value + \": THIS binding will be default binding.\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction( element ) {\r\n\t\t\tif ( element.unit =- \"won\" )  // kr\r\n\t\t\treturn true;\r\n\t\t}\r\n\t);\r\n\r\n\t// add currency binding for 'us-dollar'\r\n\tko.bindingSelector.add(\r\n\t\t\"currency\",\r\n\t\t{\r\n\t\t\t\"update\": function (element, valueAccessor) {\r\n\t\t\t\tvar value = ko.utils.unwrapObservable(valueAccessor() || {});\r\n\t\t\t\telement.innerText = value + \": THIS binding will be default binding.\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction( element ) {\r\n\t\t\tif ( element.unit =- \"dollars\" )  // us\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t);\r\n\r\n\t// binding selector can not find a binding has matched condition.\r\n\t// so, binding will be ignored.\r\n\t<span data-bind=\"currency: amounts\" unit=\"$\"></span>\r\n\r\n##License\r\n* MIT - [http://www.opensource.org/licenses/mit-license.php](http://www.opensource.org/licenses/mit-license.php)\r\n\r\n##DISCUSSION\r\n","google":"UA-40929587-1","note":"Don't delete this file! It's used internally to help with page regeneration."}